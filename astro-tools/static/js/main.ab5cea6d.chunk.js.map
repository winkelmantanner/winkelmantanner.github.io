{"version":3,"sources":["data.js","SizeComparison.js","OtherPlanetEclipseAnalyzer.js","ApparentSizeVariance.js","RecessionOfMoon.js","Images.js","App.js","serviceWorker.js","index.js"],"names":["star_data","planet_data","moon_data","DIGITS","split","reduce","acc","char","DataPoint","string","isNaN","this","value","num_significant_figures","Number","getNumSignificantFigures","scalar","d","first_nonzero_index","significant_digit_number","last_significant_digit_number","dp_index","index","length","UNIT_REGEX","PRE_UNIT_REGEX","SCALE_REGEX","AstroObject","data","key","getScaled","prefix","attribute_key","scale_part","get_complete_unit","exponent","undefined","test","match","val","Math","pow","object","get_base_unit_value","get_base_unit","complete_unit_string","base_unit","_","el","Star","name","indexOf","toLowerCase","Error","String","Planet","Moon","planet","sqrt","SizeComparison","sunSize","moonSize","starColor","divisor","max","moon_radius","sun_radius","style","backgroundColor","verticalAlign","display","width","height","align","margin","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","TRAPPIST_1_DATA","au_from_earth_radii","value_in_earth_radii","MyTh","props","border","children","MyTd","TitleCase","textTransform","OtherPlanetEclipseAnalyzer","computed_data","forEach","moon","star","relationship","star_color","moon_apparent_size_from_planet_center","atan","moon_apparent_size_from_planet_point_closest_to_moon","sun_apparent_size_from_planet_center","sun_apparent_size_from_planet_point_closest_to_sun","ratio_from_planet_center","ratio_from_planet_point_closest_to_moon","min_error","min","abs","log","push","k","j","home_planet_data","planet_alignment_distance_au","home_radius_au","moon_radius_au","star_radius_au","sort","a","b","map","alignItems","PI","toFixed","Comparison","moonDiameterRadians","sunDiameterRadians","ApparentSizeVariance","earth","sun","moon_radius_km","sun_radius_km","earth_radius_km","earth_orbit","get_base_unit_value_nicer","tangents","maximum","minimum","average","angles","Object","keys","acc2","key2","getMoonDistance","time_ago","current_distance","current_rate_of_recession","bisect","f","f_max","local_min","local_max","error","Infinity","c","gyr_format","number","fixed_num_dp","RecessionOfMoon","state","distance_exponent","recession_rate_cm_per_yr","earth_semimajor_axis_km","dist_at_which_moon_appears_same_size_as_sun_from_earth_center_km","dist_at_which_moon_appears_same_size_as_sun_from_earth_point_closest_to_moon_km","time_ago_yrs_array","Array","NUM_ENTRIES_FROM_FORMATION_TO_NOW","fill","array","recession_rate_km_per_yr","href","textAlign","type","onChange","event","setState","target","step","cursor","labels","s","datasets","label","pointBackgroundColor","pointBorderColor","borderColor","lineTension","time_ago_yrs","options","title","text","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","gridLines","color","t","lineWidth","callback","years_before_present","React","Component","Images","src","process","alt","App","basename","path","to","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ab5cea6d.chunk.js","sourcesContent":["/*\n\nTHIS FILE WAS COPIED FROM public/plainHtmlStuff/data.js\nA FEW LINTING CHANGES HAVE BEEN MADE\nI WISH I COULD JUST IMPORT THIS FROM public/plainHtmlStuff, BUT I CAN'T\n\n*/\n\nconst star_data = {\n  \"name\": [                   \"sun\"],\n  \"mass (10^24 kg)\": [        \"1988500\"],\n  \"radius (km)\": [            \"695700\"],\n  \"rotation period (hours)\": [\"609.12\"]\n};\nconst planet_data = {\n  \"name\": [                       \"mercury\", \"venus\",   \"earth\",  \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\",\"pluto\"],\n  \"star\": [                       \"sun\",     \"sun\",     \"sun\",    \"sun\",   \"sun\",    \"sun\",    \"sun\",    \"sun\",    \"sun\"],\n  \"mass (10^24 kg)\": [            \"0.330\",   \"4.87\",    \"5.97\",   \"0.642\", \"1898\",   \"568\",    \"86.8\",   \"102\",    \"0.0146\"], // 10^24 kg\n  \"equatorial diameter (km)\": [   \"4879\",    \"12104\",   \"12756\",  \"6792\",  \"142984\", \"120536\", \"51118\",  \"49528\",  \"2377\"], // km\n  \"polar diameter (km)\": [        \"4879\",    \"12104\",   \"12713.6\",\"6752\",  \"133709\", \"108728\", \"49946\",  \"48682\",  \"2377\"], // km\n  \"semimajor axis (10^6 km)\": [   \"57.9\",    \"108.2\",   \"149.6\",  \"227.9\", \"778.6\",  \"1433.5\", \"2872.5\", \"4495.1\", \"5906.4\"], // 10^6 km\n  \"perihelion (10^6 km)\": [       \"46.0\",    \"107.5\",   \"147.1\",  \"206.6\", \"740.5\",  \"1352.6\", \"2741.3\", \"4444.5\", \"4436.8\"],\n  \"aphelion (10^6 km)\": [         \"69.8\",    \"108.9\",   \"152.1\",  \"249.2\", \"816.6\",  \"1514.5\", \"3003.6\", \"4545.7\", \"7375.9\"],\n  \"orbital period (earth days)\": [\"88.0\",    \"224.7\",   \"365.2\",  \"687.0\", \"4331\",   \"10747\",  \"30589\",  \"59800\",  \"90560\"], // days\n  \"orbital velocity (km/s)\": [    \"47.4\",    \"35.0\",    \"29.8\",   \"24.1\",  \"13.1\",   \"9.7\",    \"6.8\",    \"5.4\",    \"4.7\"], // km/s\n  \"rotation period (hours)\": [    \"1407.6\",  \"-5832.5\", \"23.9\",   \"24.6\",  \"9.9\",    \"10.7\",   \"-17.2\",  \"16.1\",   \"-153.3\"],\n  \"length of day (hours)\": [      \"4222.6\",  \"2802.0\",  \"24.0\",   \"24.7\",  \"9.9\",    \"10.7\",   \"17.2\",   \"16.1\",   \"153.3\"]\n};\nconst moon_data = {\n  \"name\": [                      \"the moon\",   \"phobos\",   \"deimos\",   \"io\",      \"europa\",  \"ganymede\",\"callisto\", \"titan\",    \"miranda\",  \"ariel\",   \"umbriel\", \"titania\", \"oberon\",    \"triton\",    \"charon\"],\n  \"planet\": [                    \"earth\",      \"mars\",     \"mars\",     \"jupiter\", \"jupiter\", \"jupiter\", \"jupiter\",  \"saturn\",   \"uranus\",   \"uranus\",  \"uranus\",  \"uranus\",  \"uranus\",    \"neptune\",   \"pluto\"],\n  \"mass (10^20 kg)\": [           \"734.767309\", \"0.000106\", \"0.000024\", \"893.2\",   \"480.0\",   \"1481.9\",  \"1075.9\",   \"1345.5\",   \"0.66\",     \"12.9\",    \"12.2\",    \"34.2\",    \"28.8\",      \"214\",       \"15.86\"],\n  \"radius (km)\": [               \"1737.4\",     \"12\",       \"6\",        \"1821.5\",  \"1560.8\",  \"2631.2\",  \"2410.3\",   \"2575\",     \"234\",      \"578\",     \"584.7\",   \"788.9\",   \"761.4\",     \"1353.4\",    \"606\"], // volumetric mean for the moon\n  \"semimajor axis (10^3 km)\": [  \"384.399\",    \"9.378\",    \"23.459\",   \"421.9\",   \"671.1\",   \"1070.4\",  \"1882.7\",   \"1221.83\",  \"129.9\",    \"190.9\",   \"266.0\",   \"436.3\",   \"583.5\",     \"354.76\",    \"19.596\"],\n  \"orbital period (earth days)\":[\"27.321662\",  \"0.31891\",  \"1.26244\",  \"1.769138\",\"3.551181\",\"7.154553\",\"16.689017\",\"15.945421\",\"1.413479\", \"2.520379\",\"4.144176\",\"8.705867\",\"13.463234\", \"-5.876854\", \"6.3872\"]\n};\n\n\n// DIGITS is an object like {'0':true, '1':true, ..., '9':true}\nconst DIGITS = '0123456789'.split('').reduce((acc, char) => {\n  acc[char] = true;\n  return acc;\n}, {});\n\n\nclass DataPoint {\n  constructor(string) {\n    if(isNaN(string)) {\n      this.value = string;\n      this.num_significant_figures = null;\n    } else {\n      this.value = Number(string);\n      this.num_significant_figures = DataPoint.getNumSignificantFigures(string);\n    }\n  }\n\n  static getNumSignificantFigures(string) {\n    let first_nonzero_index = -1;\n    let significant_digit_number = 0;\n    let last_significant_digit_number = 0;\n    let dp_index = -1;\n    for(let index = 0; index < string.length; index++) {\n      let char = string[index];\n      if(char in DIGITS) {\n        if(char !== '0'\n          && first_nonzero_index < 0\n        ) {\n          first_nonzero_index = index;\n        }\n        if(first_nonzero_index >= 0) {\n          significant_digit_number += 1;\n        }\n        if(char !== '0') {\n          last_significant_digit_number = significant_digit_number;\n        }\n        if(char === '0'\n          && dp_index >= 0\n          && dp_index < index\n        ) {\n          last_significant_digit_number = significant_digit_number;\n        }\n      } else if(char === '.') {\n        dp_index = index;\n      }\n    }\n    return last_significant_digit_number;\n  }\n\n  getScaled(scalar) {\n    let d = new DataPoint('0');\n    d.value = this.value * scalar;\n    d.num_significant_figures = this.num_significant_figures;\n    return d;\n  }\n}\n\n\nconst UNIT_REGEX =     /^.*\\((.*)\\)$/;\nconst PRE_UNIT_REGEX = /^(.*)\\(.*\\)$/;\nconst SCALE_REGEX = /^10\\^(-?[0-9]*)$/;\n\nconst GRAVITATIONAL_CONSTANT = 6.67408e-20; // (km^3) / (kg * s^2)\n\nclass AstroObject {\n  constructor(index, data) {\n    for(const key in data) {\n      this[key] = new DataPoint(data[key][index]);\n    }\n    if(\"rotation period (hours)\" in this) {\n      this[\"rotation period (days)\"] = this[\"rotation period (hours)\"].getScaled(1.0 / 24);\n      delete this[\"rotation period (hours)\"];\n    }\n    if(\"length of day (hours)\" in this) {\n      this[\"length of day (days)\"] = this[\"length of day (hours)\"].getScaled(1.0 / 24);\n      delete this[\"length of day (hours)\"];\n    }\n    for(const prefix of ['', 'polar ', 'equatorial ']) {\n      if((prefix + \"radius (km)\") in this && !((prefix + \"diameter (km)\") in this)) {\n        this[prefix + \"diameter (km)\"] = this[prefix + \"radius (km)\"].getScaled(2);\n      } else if((prefix + \"diameter (km)\") in this && !((prefix + \"radius (km)\") in this)) {\n        this[prefix + \"radius (km)\"] = this[prefix + \"diameter (km)\"].getScaled(0.5);\n      }\n    }\n  }\n\n  static get_base_unit_value(attribute_key, value) {\n    // returns a number giving the value of the quantity in the base unit\n    // be sure to pass both parameters:\n    //   attribute_key: string\n    //   value: number\n    const complete_unit = AstroObject.get_complete_unit(attribute_key);\n    const scale_part = complete_unit.split(' ')[0];\n    let exponent = 0;\n    if(scale_part !== undefined && SCALE_REGEX.test(scale_part)) {\n      exponent = Number(scale_part.match(SCALE_REGEX)[1]);\n    }\n    let val = value;\n    if(exponent !== 0) {\n      val = value * Math.pow(10, exponent)\n    }\n    return val;\n  }\n  static get_base_unit_value_nicer(object, attribute_key) {\n    // ADDED March 20, 2020\n    // object: AstroObject\n    // attribute_key: string\n    return AstroObject.get_base_unit_value(attribute_key, object[attribute_key].value);\n  }\n  static get_base_unit_attribute_key(attribute_key) {\n    // returns a string giving the attribute key after removing any scale (for example: 10^20)\n    // so AstroObject.get_base_unit_attribute_key('z (10^3 q)') would return 'z (q)'\n    const pre_unit_string = attribute_key.match(PRE_UNIT_REGEX)[1];\n    return pre_unit_string + \" (\" + AstroObject.get_base_unit(attribute_key) + \")\";\n  }\n\n  static get_complete_unit(attribute_key) {\n    // returns a string giving the unit of the passed attribute key, including the scale\n    // so AstroObject.get_complete_unit('z (10^3 q)') would return '10^3 q'\n    let complete_unit_string = null;\n    if(UNIT_REGEX.test(attribute_key)) {\n      complete_unit_string = attribute_key.match(UNIT_REGEX)[1];\n    }\n    return complete_unit_string;\n  }\n  static get_base_unit(attribute_key) {\n    // returns a string giving the unit of the passed attribute key, excluding the scale\n    // so AstroObject.get_base_unit('z (10^3 q)') would return 'q'\n    let base_unit = null;\n    const complete_unit_string = AstroObject.get_complete_unit(attribute_key);\n    if(complete_unit_string !== null) {\n      base_unit = complete_unit_string.split(' ').reduce((_, el) => el, null);\n    }\n    return base_unit;\n  }\n}\n\nclass Star extends AstroObject {\n  constructor(name) {\n    const index = star_data.name.indexOf(name.toLowerCase());\n    if(-1 === index) {\n      throw new Error(\"Star::constructor Unable to find star with name '\" + String(name.toLowerCase()) + \"'\");\n    }\n    super(index, star_data);\n  }\n}\nclass Planet extends AstroObject {\n  constructor(name) {\n    const index = planet_data.name.indexOf(name.toLowerCase());\n    if(-1 === index) {\n      throw new Error(\"Planet::constructor Unable to find planet with name '\" + String(name.toLowerCase()) + \"'\");\n    }\n    super(index, planet_data);\n  }\n}\nclass Moon extends AstroObject {\n  constructor(name) {\n    const index = moon_data.name.indexOf(name.toLowerCase());\n    if(-1 === index) {\n      throw new Error(\"Moon::constructor Unable to find moon with name '\" + String(name.toLowerCase()) + \"'\");\n    }\n    super(index, moon_data);\n    if(\"semimajor axis (10^3 km)\" in this\n      && !(\"orbital velocity (km/s)\" in this)\n    ) {\n      const planet = new Planet(this.planet.value);\n      if(\"mass (10^24 kg)\" in planet) {\n        this[\"orbital velocity (km/s)\"] = new DataPoint('0');\n        this[\"orbital velocity (km/s)\"].value = Math.sqrt(\n          GRAVITATIONAL_CONSTANT\n          * AstroObject.get_base_unit_value(\"mass (10^24 kg)\", planet[\"mass (10^24 kg)\"].value)\n          / AstroObject.get_base_unit_value(\"semimajor axis (10^3 km)\", this[\"semimajor axis (10^3 km)\"].value)\n        );\n        this[\"orbital velocity (km/s)\"].num_significant_figures = 3;\n      }\n    }\n  }\n}\n\n// module.exports = \nexport {\n  star_data,\n  planet_data,\n  moon_data,\n  DIGITS,\n  DataPoint,\n  AstroObject,\n  Star,\n  Planet,\n  Moon\n};","import React from 'react';\n\nexport default function SizeComparison({sunSize, moonSize, starColor}) {\n  const PIXEL_RADIUS = 50; // pixels\n\n  const divisor = Math.max(sunSize, moonSize); // some distance unit per pixel\n  const moon_radius = PIXEL_RADIUS * moonSize / divisor; // pixels\n  const sun_radius = PIXEL_RADIUS * sunSize / divisor; // pixels\n  return (\n    <div style={{\n      backgroundColor: 'black',\n      verticalAlign: 'middle',\n      display: 'flex',\n      width: 2 * PIXEL_RADIUS,\n      height: 2 * PIXEL_RADIUS,\n      align: 'right'\n    }}>\n      <div style={{\n        width: PIXEL_RADIUS - moon_radius\n      }} />\n      <div style={{\n        backgroundColor: 'gray',\n        display: 'inline-block',\n        height: 2 * moon_radius,\n        width: moon_radius,\n        margin: 'auto',\n        borderTopLeftRadius: moon_radius,\n        borderBottomLeftRadius: moon_radius\n      }} />\n      <div style={{\n        backgroundColor: starColor || 'yellow',\n        display: 'inline-block',\n        height: 2 * sun_radius,\n        width: sun_radius, \n        margin: 'auto',\n        borderTopRightRadius: sun_radius,\n        borderBottomRightRadius: sun_radius\n      }} />\n      <div style={{\n        width: PIXEL_RADIUS - sun_radius\n      }} />\n    </div>\n  );\n}","import React from 'react';\nimport {Planet, Star, Moon, moon_data, AstroObject} from './data.js';\nimport SizeComparison from './SizeComparison.js';\n\nconst TRAPPIST_1_RADIUS_SUN_RADII = 0.121;\nconst SUN_RADIUS_KM = 6.957e5;\nconst TRAPPIST_1_DATA = [\n  // [name, semimajor axis in AU, radius in earth radii]\n  ['b', 0.01154775, 1.121],\n  ['c', 0.01581512, 1.095],\n  ['d', 0.02228038, 0.784],\n  ['e', 0.02928285, 0.910],\n  ['f', 0.03853361, 1.046],\n  ['g', 0.04687692, 1.148],\n  ['h', 0.06193488, 0.773]\n];\nconst EARTH_RADIUS_KM = 6378.1;\nconst AU_KM = 1.496e8;\nfunction au_from_earth_radii(value_in_earth_radii) {\n  return value_in_earth_radii * EARTH_RADIUS_KM / AU_KM;\n}\nfunction au_from_sun_radii(value_in_sun_radii) {\n  return value_in_sun_radii * SUN_RADIUS_KM / AU_KM;\n}\n\n\nfunction MyTh(props) {\n  return <th style={{border: \"1px solid black\"}}>{props.children}</th>;\n}\nfunction MyTd(props) {\n  return <td style={{border: \"1px solid black\"}}>{props.children}</td>;\n}\nfunction TitleCase(props) {\n  return <span style={{textTransform: 'capitalize'}}>{props.children}</span>;\n}\n\nexport default function OtherPlanetEclipseAnalyzer() {\n  const computed_data = [];\n  moon_data[\"name\"].forEach(name => {\n    const d = {};\n    const moon = new Moon(name);\n    const planet = new Planet(moon.planet.value);\n    const star = new Star(planet.star.value);\n    d.relationship = \"moon\";\n    d.star_color = \"yellow\";\n    d.moon = moon;\n    d.moon_apparent_size_from_planet_center = Math.atan(moon[\"radius (km)\"].value / AstroObject.get_base_unit_value(\"semimajor axis (10^3 km)\", moon[\"semimajor axis (10^3 km)\"].value));\n    d.moon_apparent_size_from_planet_point_closest_to_moon = Math.atan(moon[\"radius (km)\"].value / (AstroObject.get_base_unit_value(\"semimajor axis (10^3 km)\", moon[\"semimajor axis (10^3 km)\"].value) - planet[\"equatorial radius (km)\"].value));\n    d.sun_apparent_size_from_planet_center = Math.atan(star[\"radius (km)\"].value / AstroObject.get_base_unit_value(\"semimajor axis (10^6 km)\", planet[\"semimajor axis (10^6 km)\"].value));\n    d.sun_apparent_size_from_planet_point_closest_to_sun = Math.atan(star[\"radius (km)\"].value / (AstroObject.get_base_unit_value(\"semimajor axis (10^6 km)\", planet[\"semimajor axis (10^6 km)\"].value) - planet[\"equatorial radius (km)\"].value));\n    d.ratio_from_planet_center = d.moon_apparent_size_from_planet_center / d.sun_apparent_size_from_planet_center;\n    d.ratio_from_planet_point_closest_to_moon = d.moon_apparent_size_from_planet_point_closest_to_moon / d.sun_apparent_size_from_planet_point_closest_to_sun;\n\n    d.min_error = Math.min(Math.abs(Math.log(d.ratio_from_planet_center)), Math.abs(Math.log(d.ratio_from_planet_point_closest_to_moon)));\n\n    computed_data.push(d);\n  });\n  for(let k = 0; k < TRAPPIST_1_DATA.length; k++) {\n    for(let j = 0; j < k; j++) {\n      const moon_data = TRAPPIST_1_DATA[j];\n      const home_planet_data = TRAPPIST_1_DATA[k];\n      const d = {};\n      d.relationship = \"neighbor\";\n      d.star_color = \"red\";\n      d.moon = {name: {value: \"TRAPPIST-1\" + moon_data[0]}, planet: {value: \"TRAPPIST-1\" + home_planet_data[0]}};\n      const planet_alignment_distance_au = home_planet_data[1] - moon_data[1];\n      const home_radius_au = au_from_earth_radii(home_planet_data[2])\n      const moon_radius_au = au_from_earth_radii(moon_data[2]);\n      const star_radius_au = au_from_sun_radii(TRAPPIST_1_RADIUS_SUN_RADII);\n      d.moon_apparent_size_from_planet_center =                Math.atan(moon_radius_au / planet_alignment_distance_au);\n      d.moon_apparent_size_from_planet_point_closest_to_moon = Math.atan(moon_radius_au / (planet_alignment_distance_au - home_radius_au));\n      d.sun_apparent_size_from_planet_center =                 Math.atan(star_radius_au / home_planet_data[1]);\n      d.sun_apparent_size_from_planet_point_closest_to_sun =   Math.atan(star_radius_au / (home_planet_data[1] - home_radius_au));\n      d.ratio_from_planet_center = d.moon_apparent_size_from_planet_center / d.sun_apparent_size_from_planet_center;\n      d.ratio_from_planet_point_closest_to_moon = d.moon_apparent_size_from_planet_point_closest_to_moon / d.sun_apparent_size_from_planet_point_closest_to_sun;\n\n      d.min_error = Math.min(Math.abs(Math.log(d.ratio_from_planet_center)), Math.abs(Math.log(d.ratio_from_planet_point_closest_to_moon)));\n\n      computed_data.push(d);\n    }\n  }\n  computed_data.sort((a, b) => a.min_error - b.min_error);\n  return (<div>\n    <table>\n      <thead>\n        <tr>\n          <MyTh>Related Objects</MyTh>\n          <MyTh>From Planet Center</MyTh>\n          <MyTh>From Planet Closest Point To Moon</MyTh>\n        </tr>\n      </thead>\n      <tbody>\n        {computed_data.map(data => {\n          return (<tr key={data.moon.name.value + \":\" + data.moon.planet.value} >\n            <MyTd>\n              <TitleCase>{data.moon.name.value}</TitleCase><br />\n              {data.relationship + \" of \"}<TitleCase>{data.moon.planet.value}</TitleCase>\n            </MyTd>\n            <MyTd>\n              <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <SizeComparison\n                  moonSize={data.moon_apparent_size_from_planet_center}\n                  sunSize={data.sun_apparent_size_from_planet_center}\n                  starColor={data.star_color}\n                />\n                <ul>\n                  <li><TitleCase>{data.relationship}</TitleCase> angular diameter: {(data.moon_apparent_size_from_planet_center * 2 * 180 / Math.PI).toFixed(3)}°</li>\n                  <li>Star angular diameter: {(data.sun_apparent_size_from_planet_center * 2 * 180 / Math.PI).toFixed(3)}°</li>\n                  <li>Ratio: {(data.moon_apparent_size_from_planet_center / data.sun_apparent_size_from_planet_center).toFixed(3)}</li>\n                </ul>\n              </div>\n            </MyTd>\n            <MyTd>\n              <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <SizeComparison\n                  moonSize={data.moon_apparent_size_from_planet_point_closest_to_moon}\n                  sunSize={data.sun_apparent_size_from_planet_point_closest_to_sun}\n                  starColor={data.star_color}\n                />\n                <ul>\n                  <li><TitleCase>{data.relationship}</TitleCase> angular diameter: {(data.moon_apparent_size_from_planet_point_closest_to_moon * 2 * 180 / Math.PI).toFixed(3)}°</li>\n                  <li>Star angular diameter: {(data.sun_apparent_size_from_planet_point_closest_to_sun * 2 * 180 / Math.PI).toFixed(3)}°</li>\n                  <li>Ratio: {(data.moon_apparent_size_from_planet_point_closest_to_moon / data.sun_apparent_size_from_planet_point_closest_to_sun).toFixed(3)}</li>\n                </ul>\n              </div>\n            </MyTd>\n          </tr>);\n        })}\n      </tbody>\n    </table>\n  </div>);\n}\n","import React from 'react';\nimport {Star, Planet, Moon, AstroObject} from './data.js';\nimport SizeComparison from './SizeComparison.js';\n\nconst MOON_PERIGEE_KM = 363228.9;\nconst MOON_APOGEE_KM = 405400;\n\nfunction Comparison({moonDiameterRadians, sunDiameterRadians}) {\n  return (\n    <div style={{display: \"flex\", alignItems: \"center\"}}>\n      <SizeComparison\n        moonSize={moonDiameterRadians}\n        sunSize={sunDiameterRadians}\n      />\n      <ul>\n        <li>Moon angular diameter: {(moonDiameterRadians * 2 * 180 / Math.PI).toFixed(3)}°</li>\n        <li>Star angular diameter: {(sunDiameterRadians * 2 * 180 / Math.PI).toFixed(3)}°</li>\n        <li>Ratio: {(moonDiameterRadians / sunDiameterRadians).toFixed(3)}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default function ApparentSizeVariance() {\n  const earth = new Planet('earth');\n  const moon = new Moon('the moon');\n  const sun = new Star('sun');\n  const moon_radius_km = moon['radius (km)'].value;\n  const sun_radius_km = sun['radius (km)'].value;\n  const earth_radius_km = earth['equatorial radius (km)'].value;\n  const earth_orbit = {\n    semimajor_axis: AstroObject.get_base_unit_value_nicer(earth, \"semimajor axis (10^6 km)\"),\n    perihelion: AstroObject.get_base_unit_value_nicer(earth, \"perihelion (10^6 km)\"),\n    aphelion: AstroObject.get_base_unit_value_nicer(earth, \"aphelion (10^6 km)\")\n  };\n  const moon_orbit = {\n    semimajor_axis: AstroObject.get_base_unit_value_nicer(moon, \"semimajor axis (10^3 km)\"),\n    perigee: MOON_PERIGEE_KM,\n    apogee: MOON_APOGEE_KM\n  };\n  const tangents = {\n    moon: {\n      maximum: moon_radius_km / (moon_orbit.perigee - earth_radius_km),\n      minimum: moon_radius_km / moon_orbit.apogee,\n      average: moon_radius_km / (moon_orbit.semimajor_axis - (earth_radius_km / 2))\n    },\n    sun: {\n      maximum: sun_radius_km / earth_orbit.perihelion,\n      minimum: sun_radius_km / earth_orbit.aphelion,\n      average: sun_radius_km / earth_orbit.semimajor_axis\n    }\n  };\n  const angles = Object.keys(tangents).reduce((acc, key) => {\n    acc[key] = Object.keys(tangents[key]).reduce((acc2, key2) => {\n      acc2[key2] = Math.atan(tangents[key][key2]);\n      return acc2;\n    }, {});\n    return acc;\n  }, {});\n  return (<div>\n    Maximum moon size to minimum sun size:\n    <Comparison\n      moonDiameterRadians={angles.moon.maximum}\n      sunDiameterRadians={angles.sun.minimum}\n    />\n    Minimum moon size to maximum sun size:\n    <Comparison\n      moonDiameterRadians={angles.moon.minimum}\n      sunDiameterRadians={angles.sun.maximum}\n    />\n    Average moon size to average sun size:\n    <Comparison\n      moonDiameterRadians={angles.moon.average}\n      sunDiameterRadians={angles.sun.average}\n    />\n\n      \n  </div>);\n\n\n\n}","import React from 'react';\nimport {Planet, Star, Moon, AstroObject} from './data.js';\nimport {Line} from 'react-chartjs-2';\n\nconst MEASURED_RECESSION_RATE_CM_YR = 3.8;\nconst MOON_PERIGEE_KM = 363228.9;\nconst MOON_APOGEE_KM = 405400;\nconst MOON_SEMIMAJOR_AXIS_KM = 384400;\n\nconst EARTH_AGE_YRS = 4.5e9;\n\n// The earth-moon barycenter is about 4600km from earth's center, about 3/4 of earth's radius.\n// I'm not sure whether or not the moon's semimajor axis is the average distance from center of earth to center of moon.\n// The average distance from center of earth to center of moon is 385,000km according to wikipedia.\n\nfunction getMoonDistance(time_ago, exponent, current_distance, current_rate_of_recession) {\n  // all must be in same units\n  // assumes that d(semimajor axis)/dt = k / (semimajor axis)^exponent\n  return Math.pow(\n    Math.pow(current_distance, exponent + 1)\n      + (exponent + 1) * Math.pow(current_distance, exponent) * current_rate_of_recession * (-time_ago)\n    ,\n    1 / (exponent + 1)\n  );\n}\n\nfunction bisect(f, min, max) {\n  // definitely not optimized for speed\n  const ERROR_THRESHOLD = 0.000001;\n  // const f_min = f(min);\n  const f_max = f(max);\n  let local_min = min;\n  let local_max = max;\n  let error = Infinity;\n  let c = 0;\n  while(error > ERROR_THRESHOLD && c < 1000) {\n    const f_pivot = f((local_max + local_min) / 2);\n    if(f_pivot * f_max > 0) {\n      local_max = (local_max + local_min) / 2;\n    } else {\n      local_min = (local_max + local_min) / 2;\n    }\n    error = Math.abs((local_max - local_min) / local_min);\n    // console.log(local_max, local_min, error);\n    c++;\n  }\n  return (local_max + local_min) / 2;\n}\n\nfunction gyr_format(number, fixed_num_dp) {\n  return (number/1e9).toFixed(fixed_num_dp || 1) + \"B\";\n}\n\nexport default class RecessionOfMoon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      distance_exponent: 0,\n      recession_rate_cm_per_yr: MEASURED_RECESSION_RATE_CM_YR\n    };\n  }\n  render() {\n    const earth = new Planet('earth');\n    const sun = new Star('sun');\n    const moon = new Moon('the moon');\n    const earth_semimajor_axis_km = AstroObject.get_base_unit_value_nicer(earth, 'semimajor axis (10^6 km)');\n    // const sun_angular_radius = Math.atan(sun['radius (km)'].value / earth_semimajor_axis_km);\n    const dist_at_which_moon_appears_same_size_as_sun_from_earth_center_km = (moon['radius (km)'].value * (earth_semimajor_axis_km / sun['radius (km)'].value));\n    const dist_at_which_moon_appears_same_size_as_sun_from_earth_point_closest_to_moon_km = (moon['radius (km)'].value * (earth_semimajor_axis_km / sun['radius (km)'].value)) + earth[\"equatorial radius (km)\"].value;\n    const NUM_ENTRIES_FROM_FORMATION_TO_NOW = 16;\n    const NUM_ENTRIES_IN_FUTURE = 11;\n    const time_ago_yrs_array = Array(NUM_ENTRIES_FROM_FORMATION_TO_NOW + NUM_ENTRIES_IN_FUTURE).fill(0).map((_, index, array) => {\n      return (NUM_ENTRIES_FROM_FORMATION_TO_NOW - 1 - index) * EARTH_AGE_YRS / (NUM_ENTRIES_FROM_FORMATION_TO_NOW - 1);\n    });\n    const recession_rate_km_per_yr = this.state.recession_rate_cm_per_yr / 100 / 1000;\n\n    return (<div>\n      <h3>Recession of moon and eclipses</h3>\n      <p>It is widely accepted that the moon is getting farther from earth over billions of years.  The most well accepted recession rate is 3.8 centimeters per year.  However, this has been described as anomalously high.  This number comes from measurements in which a specially shaped mirror on the moon works with a laboratory on earth using a laser to measure distance.  But measurements from other fields, such as palientology and geology, indicate a slower recession rate.  Also, if the moon is receding at 3.8 centimeters per year, based on the physics of tidal recession, it would coincide with earth 1.5 billion years ago, much less than the generally accepted 4.5 billion year age of the earth-moon system. (<a href=\"https://link.springer.com/article/10.1186/2191-2521-1-1\">source</a>).</p>\n      <p>We live on earth in a window of time in which perfect eclipses are possible.  The graph below extrapolates the present recession rate relative to the age of the earth-moon system: {EARTH_AGE_YRS} years.  The rate of tidal recession can be modelled as k / a^n where k is a constant, a is the distance to the moon, and n is an integer.  So da/dt = k / a^n.  This differential equation solves to a = ((n+1) * (k*t + C)) ^ (1/(n+1)), where C is an arbitrary constant.  When trying to find the value of n, I could only find it from a <a href=\"https://en.wikipedia.org/wiki/Young_Earth_creationism\">young-earth creationist</a> source (<a href=\"https://creation.com/the-moons-recession-and-age\">https://creation.com/the-moons-recession-and-age</a>).  This source says n=6.</p>\n      <p><strong>NOTE:</strong> the history of the moon's recession almost certainly does NOT look like the graph below!  It is not certain what it does look like, but it is well accepted that the recession rate was not constant in the past.  This extrapolation also ignores a lot of other parameters that could change (such as the eccentricity of the moon's orbit).</p>\n      Slide these sliders to control some of the parameters.\n      <div style={{textAlign:'center'}}>\n        <input\n          type=\"range\"\n          onChange={event => {\n            this.setState({\n              distance_exponent: Number(event.target.value)\n            });\n          }}\n          value={this.state.distance_exponent}\n          min=\"0\"\n          max=\"8\"\n          step=\"1\"\n        /><br />\n        n={this.state.distance_exponent}\n      </div><br />\n      <div style={{textAlign:'center'}}>\n        <input\n          type=\"range\"\n          style={{cursor: 'pointer'}}\n          onChange={event => {\n            this.setState({\n              recession_rate_cm_per_yr: Number(event.target.value)\n            });\n          }}\n          value={this.state.recession_rate_cm_per_yr}\n          min=\"0\"\n          max=\"6\"\n          step=\"0.05\"\n        /><br />\n        present recession rate = {this.state.recession_rate_cm_per_yr} cm/yr\n      </div>\n      From point closest to moon:\n      <ul>\n        <li>\n          Annular eclipses become possible {\n            gyr_format(bisect(\n              time_ago => dist_at_which_moon_appears_same_size_as_sun_from_earth_point_closest_to_moon_km - getMoonDistance(time_ago, this.state.distance_exponent, MOON_APOGEE_KM, recession_rate_km_per_yr),\n              EARTH_AGE_YRS,\n              -EARTH_AGE_YRS\n            ), 3) \n          } years ago.<br />\n        </li>\n        <li>\n          Total eclipses become impossible {\n            gyr_format(bisect(\n              time_ago => dist_at_which_moon_appears_same_size_as_sun_from_earth_point_closest_to_moon_km - getMoonDistance(time_ago, this.state.distance_exponent, MOON_PERIGEE_KM, recession_rate_km_per_yr),\n              EARTH_AGE_YRS,\n              -EARTH_AGE_YRS\n            ), 3)\n          } years ago.\n        </li>\n      </ul>\n      From point at center of earth:\n      <ul>\n        <li>\n          Annular eclipses become possible {\n            gyr_format(bisect(\n              time_ago => dist_at_which_moon_appears_same_size_as_sun_from_earth_center_km - getMoonDistance(time_ago, this.state.distance_exponent, MOON_APOGEE_KM, recession_rate_km_per_yr),\n              EARTH_AGE_YRS,\n              -EARTH_AGE_YRS\n            ), 3)\n          } years ago.\n        </li>\n        <li>\n          Total eclipses become impossible {\n            gyr_format(bisect(\n              time_ago => dist_at_which_moon_appears_same_size_as_sun_from_earth_center_km - getMoonDistance(time_ago, this.state.distance_exponent, MOON_PERIGEE_KM, recession_rate_km_per_yr),\n              EARTH_AGE_YRS,\n              -EARTH_AGE_YRS\n            ), 3)\n          } years ago.\n        </li>\n      </ul>\n      <Line\n        data={{\n          labels: time_ago_yrs_array.map(s => s.toFixed(0)),\n          datasets: [\n            {\n              label: 'Distance at which the moon is the same size as the sun from center of earth',\n              data: time_ago_yrs_array.map(_ => dist_at_which_moon_appears_same_size_as_sun_from_earth_center_km),\n              pointBackgroundColor: 'brown',\n              pointBorderColor: 'brown',\n              borderColor: 'brown',\n              lineTension: 0,\n              fill: false\n            },\n            {\n              label: 'Distance at which the moon is the same size as the sun from point on earth closest to moon',\n              data: time_ago_yrs_array.map(_ => dist_at_which_moon_appears_same_size_as_sun_from_earth_point_closest_to_moon_km),\n              pointBackgroundColor: 'green',\n              pointBorderColor: 'green',\n              borderColor: 'green',\n              lineTension: 0,\n              fill: false\n            },\n            {\n              label: 'Moon apogee',\n              data: time_ago_yrs_array.map(time_ago_yrs => {\n                const moon_apogee = getMoonDistance(time_ago_yrs, this.state.distance_exponent, MOON_APOGEE_KM, recession_rate_km_per_yr);\n                return moon_apogee;\n              }),\n              pointBackgroundColor: 'black',\n              pointBorderColor: 'black',\n              borderColor: 'black',\n              lineTension: 0,\n              fill: false\n            },\n            {\n              label: 'Moon perigee',\n              data: time_ago_yrs_array.map(time_ago_yrs => {\n                const moon_perigee = getMoonDistance(time_ago_yrs, this.state.distance_exponent, MOON_PERIGEE_KM, recession_rate_km_per_yr);\n                return moon_perigee;\n              }),\n              pointBackgroundColor: 'black',\n              pointBorderColor: 'black',\n              borderColor: 'black',\n              lineTension: 0,\n              fill: false\n            },\n            {\n              label: 'Moon semimajor axis',\n              data: time_ago_yrs_array.map(time_ago_yrs => {\n                const moon_perigee = getMoonDistance(time_ago_yrs, this.state.distance_exponent, MOON_SEMIMAJOR_AXIS_KM, recession_rate_km_per_yr);\n                return moon_perigee;\n              }),\n              pointBackgroundColor: 'purple',\n              pointBorderColor: 'purple',\n              borderColor: 'purple',\n              lineTension: 0,\n              fill: false\n            }\n          ]\n        }}\n        options={{\n          title: {\n            display: true,\n            text: 'Linear Extrapolation of Moon Recession Compared to Perfect Eclipse Distances'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              },\n              scaleLabel: {\n                labelString: \"Moon distance from earth (kilometers)\",\n                display: true\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                color: time_ago_yrs_array.map(t => t === 0 ? 'black' : 'rgb(175,175,175)'),\n                lineWidth: time_ago_yrs_array.map(t => t === 0 ? 2 : 1)\n              },\n              ticks: {\n                callback: years_before_present => {\n                  return (\n                    String(years_before_present) === String(EARTH_AGE_YRS)\n                    ? gyr_format(EARTH_AGE_YRS) + \" (age)\"\n                    : (String(years_before_present) === \"0\"\n                      ? \"0 (now)\"\n                      : gyr_format(years_before_present)\n                    )\n                  );\n                }\n              },\n              scaleLabel: {\n                labelString: \"Years before present\",\n                display: true\n              }\n            }]\n          }\n        }}\n      />\n    </div>);\n  }\n}","import React from 'react';\n\nexport default function Images() {\n    return (<div>\n        These images were taken using an Orion XT8g GoTo Dobsonian telescope.  The images were captured by holding the cell phone camera to the eyepiece of the telescope.<br />\n        <h3>The Moon</h3>\n        This image was cropped.<br />\n        <img src={process.env.PUBLIC_URL + '/moon.jpeg'} width={300} alt={\"The Moon\"} /><br />\n        <h3>Conjunction of Jupiter and Saturn (2020-12-21)</h3>\n        The telescope changed the orientation of the image - Saturn actually appeared higher in the sky than Jupiter.<br />\n        Jupiter's 4 largest moons are easily visible.<br />\n        5:42:21pm CST (the background light is daylight):<br />\n        <img src={process.env.PUBLIC_URL + '/2020-12-21_5:42:21pm.jpeg'} width={300} alt={\"Conjunction of Jupiter and Saturn\"} />\n        <img src={process.env.PUBLIC_URL + '/2020-12-21_5:42:21pm_annotated.jpg'} width={300} alt={\"Conjunction of Jupiter and Saturn - annotated\"} /><br />\n        6:03:50pm CST:<br />\n        <img src={process.env.PUBLIC_URL + '/2020-12-21_6:03:50pm.jpeg'} width={300} alt={\"Conjunction of Jupiter and Saturn - annotated\"} />\n    </div>);\n}\n","import React from 'react';\n\nimport {Route, Link, HashRouter, Switch} from 'react-router-dom';\nimport OtherPlanetEclipseAnalyzer from './OtherPlanetEclipseAnalyzer.js';\nimport ApparentSizeVariance from './ApparentSizeVariance.js';\nimport RecessionOfMoon from './RecessionOfMoon.js';\nimport Images from './Images.js';\n// import EarthMoonUmbra from './EarthMoonUmbra';\n\n\n// I wanted to put this entire app on a github site at /astroTools, but it didn't work.\n// I think this may be solvable by prefixing the URLs with the name of the folder.\nconst URL_PREFIX = '/astro-tools';\n\nfunction App() {\n  return (<div>\n    <HashRouter basename={URL_PREFIX}>\n      <Switch>\n        <Route path='/OtherPlanetEclipseAnalyzer'>\n          <Link to='/eclipse'>Back to perfect eclipse analysis tools</Link>\n          <OtherPlanetEclipseAnalyzer/>\n        </Route>\n          \n        <Route path='/ApparentSizeVariance'>\n          <Link to='/eclipse'>Back to perfect eclipse analysis tools</Link>\n          <ApparentSizeVariance/>\n        </Route>\n        <Route path='/RecessionOfMoon'>\n          <Link to='/eclipse'>Back to perfect eclipse analysis tools</Link>\n          <RecessionOfMoon/>\n        </Route>\n        <Route path=\"/images\">\n          <Images/>\n        </Route>\n        <Route path=\"/eclipse\">\n          <h1>The Perfect Eclipse Coincidence</h1>\n          <p>It is a major coincidence that the moon looks almost the exact same size as the sun in earth's sky.  Perfect eclipses are unique to planet earth.  This is interesting since no other planet has intelligent life to observe such a phenomenon.  I was fortunate enough to witness a perfect eclipse on August 21, 2017.</p>\n          <p>On average, the angular radius of the moon is about 98% of angular radius of the sun when both are visible.  However, it varies from about 91% to about 106%.  Total eclipses are only possible when it is greater than 100%, which is slightly less than half the time.</p>\n          <p>I made some tools to analyze this coincidence.  Click one of these links to go to the tool.</p>\n          <Link to='/OtherPlanetEclipseAnalyzer'>Other Planet Eclipse Analyzer</Link><br />\n          <Link to='/ApparentSizeVariance'>Maximum and minimum size comparison</Link><br />\n          <Link to='/RecessionOfMoon'>Recession of Moon</Link>\n        </Route>\n        <Route path=\"/\">\n          <a href={process.env.PUBLIC_URL + '/plainHtmlStuff'}>Moon Coincidence Finder</a><br />\n          <a href={process.env.PUBLIC_URL + '/plainHtmlStuff?tool=bodesSolver'}>Titius-Bode Solver</a><br />\n          <Link to=\"/eclipse\">The perfect eclipse coincidence</Link><br />\n          <Link to=\"/images\">Some Telescope Images by Me</Link>\n        </Route>\n      </Switch>\n    </HashRouter>\n    {/* <EarthMoonUmbra /> */}\n  </div>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}